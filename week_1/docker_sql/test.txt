
# -e used to set up environment variable
# -v for mapping on the container
# -p for mapping the port
# we need also the volume part in order to map the docker to file system and in order to assure consistency of data
# once the container is turned down
docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \
    -e POSTGRES_DB="ny_taxi" \
    -v /home/luca/Documents/Code/data-engineering-course/week_1/docker_sql/ny_taxi_postgres_data:/var/lib/postgresql/data \
    -p 5432:5432 \
    postgres:13


# access the postgres in docker [not the best way]
pgcli -h localhost -p 5432 -u root -d ny_taxi

# BETTER way to access postgres --> PGAdmin with docker
#we map port 8080 on our machine to the 80 of the dockerized pgadmin
docker run -it \
    -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
    -e PGADMIN_DEFAULT_PASSWORD="root" \
    -p 8080:80 \
    dpage/pgadmin4

########################################################################################################################
######################################### CODE CHANGE TO BE INTERCONNECT ###############################################
########################################################################################################################

#in setting up the server on pg admin, we have to find a way to link the docker of pgadmin and the docker of postgres
#otherwise is not possible for them to communicate
# SO we can put the containers in one single network! so they can see each-other

docker network create pg-network

# now we are going to take the previous code and add the --network
# plus the --name so pg admin is able to discover postgres

docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \
    -e POSTGRES_DB="ny_taxi" \
    -v /home/luca/Documents/Code/data-engineering-course/week_1/docker_sql/ny_taxi_postgres_data:/var/lib/postgresql/data \
    -p 5432:5432 \
    --network=pg-network \
    --name pg-database \
    postgres:13

# now pgadmin in same --network, the --name is less important because nobody need to connect to pg admin
# in the pgadmin page when we register a server the host address is going to be "pg-database"

docker run -it \
    -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
    -e PGADMIN_DEFAULT_PASSWORD="root" \
    -p 8080:80 \
    --network=pg-network \
    --name pgadmin \
    dpage/pgadmin4


#command to run python script to ingest data NOT SAFEST WAY TO PASS PSW!!!!!!!!!!!

URL = "https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"

python ingest_data.py \
    --user=root \
    --password=root \
    --host=localhost \
    --port=5432 \
    --db=ny_taxi \
    --table_name=yellow_taxi_trip \
    --url="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"


# now we ded modify the docker file in order to dockerize the python script to ingest_data.py

docker build -t taxi_ingest:v001 .

#now instead of running the py we do run the docker container passing to it the parameters
# BUT!!! we need to remember to add it to the network!!! and put the correct --host
docker run -it --network=pg-network taxi_ingest:v001      \
    --user=root \
    --password=root \
    --host=pg-database \
    --port=5432 \
    --db=ny_taxi \
    --table_name=yellow_taxi_trip \
    --url="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"